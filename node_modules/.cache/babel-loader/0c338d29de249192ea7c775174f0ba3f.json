{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\games\\\\src\\\\components\\\\Control.js\";\nimport React from 'react'; // Just shows the time, taking app state time as input prop\n\nconst Timer = function (props) {\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, props.time);\n}; // Resets the timer on click and clear the setInterval\n\n\nconst Reset = function (props) {\n  return React.createElement(\"button\", {\n    onClick: props.onClickReset,\n    className: \"reset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Reset\");\n}; // Pause/ play button\n\n\nclass Control extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickHandler = () => {\n      if (this.props.paused) {\n        this.props.start();\n      } else {\n        this.props.stop();\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      className: this.props.paused ? \"paused\" : \"\",\n      onClick: this.onClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.props.paused ? \"play\" : \"pause\");\n  }\n\n}\n\n;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.tick = () => {\n      this.setState({\n        timer: this.state.timer + 1\n      });\n    };\n\n    this.startTimer = () => {\n      this.interval = setInterval(this.tick, 1000);\n      this.setState({\n        paused: false\n      });\n    };\n\n    this.stopTimer = () => {\n      clearInterval(this.interval);\n      this.setState({\n        paused: true\n      });\n    };\n\n    this.reset = () => {\n      this.setState({\n        timer: 0,\n        paused: true\n      });\n      clearInterval(this.interval);\n    };\n\n    this.state = {\n      timer: 0,\n      paused: true\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Timer, {\n      time: this.state.timer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Control, {\n      paused: this.state.paused,\n      start: this.startTimer,\n      stop: this.stopTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Reset, {\n      onClickReset: this.reset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n}), mountNode);","map":{"version":3,"sources":["C:/Users/HP/Desktop/games/src/components/Control.js"],"names":["React","Timer","props","time","Reset","onClickReset","Control","Component","constructor","onClickHandler","paused","start","stop","render","App","tick","setState","timer","state","startTimer","interval","setInterval","stopTimer","clearInterval","reset","ReactDOM","mountNode"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,KAAK,GAAG,UAASC,KAAT,EAAgB;AAC7B,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,KAAK,CAACC,IADR,CADD;AAKA,CAND,C,CAQA;;;AACA,MAAMC,KAAK,GAAG,UAASF,KAAT,EAAgB;AAC7B,SACC;AAAQ,IAAA,OAAO,EAAEA,KAAK,CAACG,YAAvB;AAAqC,IAAA,SAAS,EAAC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD;AAKA,CAND,C,CASA;;;AACA,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAsC;AACrCC,EAAAA,WAAW,CAACN,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAIlBO,cAJkB,GAID,MAAM;AACrB,UAAG,KAAKP,KAAL,CAAWQ,MAAd,EAAqB;AACnB,aAAKR,KAAL,CAAWS,KAAX;AACD,OAFD,MAGI;AACF,aAAKT,KAAL,CAAWU,IAAX;AACD;AACF,KAXiB;AAElB;;AAWDC,EAAAA,MAAM,GAAG;AACR,WACE;AAAQ,MAAA,SAAS,EAAE,KAAKX,KAAL,CAAWQ,MAAX,GAAkB,QAAlB,GAA2B,EAA9C;AAAkD,MAAA,OAAO,EAAE,KAAKD,cAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKP,KAAL,CAAWQ,MAAX,GAAkB,MAAlB,GAAyB,OAD7B,CADF;AAKA;;AApBoC;;AAqBrC;;AAGD,MAAMI,GAAN,SAAkBd,KAAK,CAACO,SAAxB,CAAkC;AACjCC,EAAAA,WAAW,CAACN,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAKlBa,IALkB,GAKX,MAAM;AACZ,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAG,KAAKC,KAAL,CAAWD,KAAX,GAAmB;AAA7B,OAAd;AACA,KAPiB;;AAAA,SASnBE,UATmB,GASN,MAAK;AACjB,WAAKC,QAAL,GAAgBC,WAAW,CAAC,KAAKN,IAAN,EAAW,IAAX,CAA3B;AACE,WAAKC,QAAL,CAAc;AAAEN,QAAAA,MAAM,EAAG;AAAX,OAAd;AACF,KAZkB;;AAAA,SAclBY,SAdkB,GAcN,MAAM;AACjBC,MAAAA,aAAa,CAAE,KAAKH,QAAP,CAAb;AACC,WAAKJ,QAAL,CAAc;AAAEN,QAAAA,MAAM,EAAG;AAAX,OAAd;AACF,KAjBkB;;AAAA,SAmBlBc,KAnBkB,GAmBV,MAAM;AACb,WAAKR,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAG,CAAV;AAAaP,QAAAA,MAAM,EAAE;AAArB,OAAd;AACCa,MAAAA,aAAa,CAAE,KAAKH,QAAP,CAAb;AACD,KAtBiB;;AAElB,SAAKF,KAAL,GAAa;AAAED,MAAAA,KAAK,EAAE,CAAT;AAAYP,MAAAA,MAAM,EAAE;AAApB,KAAb;AACA;;AAqBDG,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,KAAKK,KAAL,CAAWD,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEK,oBAAC,OAAD;AACE,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWR,MADrB;AAEE,MAAA,KAAK,EAAE,KAAKS,UAFd;AAGE,MAAA,IAAI,EAAE,KAAKG,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFL,EAOK,oBAAC,KAAD;AAAQ,MAAA,YAAY,EAAE,KAAKE,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPL,CADD;AAWA;;AArCgC;;AAsCjC;AAEDC,QAAQ,CAACZ,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAwBa,SAAxB","sourcesContent":["import React from 'react';\r\n\r\n// Just shows the time, taking app state time as input prop\r\nconst Timer = function(props) {\r\n\treturn (\r\n\t\t<h1>\r\n\t\t\t{props.time}\r\n\t\t</h1>\r\n\t);\r\n};\r\n\r\n// Resets the timer on click and clear the setInterval\r\nconst Reset = function(props) {\r\n\treturn (\r\n\t\t<button onClick={props.onClickReset} className=\"reset\">\r\n\t\t\tReset\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\n\r\n// Pause/ play button\r\nclass Control extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t};\r\n  \r\n  onClickHandler = () => {\r\n    if(this.props.paused){\r\n      this.props.start();\r\n    }\r\n    else{\r\n      this.props.stop();\r\n    }\r\n  }\r\n  \r\n\trender() {\r\n\t\treturn (\r\n\t\t\t\t<button className={this.props.paused?\"paused\":\"\"} onClick={this.onClickHandler}>\r\n\t\t    \t{this.props.paused?\"play\":\"pause\"}\r\n\t\t    </button>\r\n\t\t);\r\n\t};\r\n};\r\n\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { timer: 0, paused: true };\r\n\t};\r\n  \r\n  tick = () => {\r\n  \tthis.setState({ timer : this.state.timer + 1 });\r\n  }\r\n  \r\n\tstartTimer = () =>{\r\n\t\tthis.interval = setInterval(this.tick,1000);\r\n    this.setState({ paused : false });\r\n\t}\r\n  \r\n  stopTimer = () => {\r\n  \tclearInterval( this.interval );\r\n    this.setState({ paused : true });\r\n\t}\r\n  \r\n  reset = () => {\r\n  \tthis.setState({ timer : 0, paused: true });\r\n    clearInterval( this.interval );\r\n  }\r\n  \r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Timer time={this.state.timer}  />\r\n        <Control \r\n          paused={this.state.paused} \r\n          start={this.startTimer} \r\n          stop={this.stopTimer} \r\n        />\r\n        <Reset  onClickReset={this.reset}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nReactDOM.render(<App/>, mountNode);"]},"metadata":{},"sourceType":"module"}