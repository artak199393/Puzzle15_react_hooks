{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\HP\\\\Desktop\\\\games\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\games\\\\src\\\\components\\\\Time.js\";\nimport React, { useState, useEffect, useRef } from 'react'; //let interval = null;\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nconst Timer = () => {\n  const _useState = useState(\"0.0\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        seconds = _useState2[0],\n        setSeconds = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isActive = _useState4[0],\n        setIsActive = _useState4[1];\n\n  const _useState5 = useState(0.0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        minutes = _useState6[0],\n        setMinutes = _useState6[1];\n\n  useInterval(() => {\n    if (seconds === 59) {\n      setMinutes(minutes => minutes + 1);\n      setSeconds(0);\n    } else {\n      setSeconds(seconds => seconds + 1);\n    }\n  }, isActive ? 1000 : null);\n\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function reset() {\n    setSeconds(0);\n    setMinutes(0);\n    setIsActive(false);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, minutes, \":\", seconds), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button button-primary button-primary-\".concat(isActive ? 'active' : 'inactive'),\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, isActive ? 'Pause' : 'Start'), React.createElement(\"button\", {\n    className: \"button\",\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Reset\")));\n};\n\nexport default Timer;","map":{"version":3,"sources":["C:/Users/HP/Desktop/games/src/components/Time.js"],"names":["React","useState","useEffect","useRef","useInterval","callback","delay","savedCallback","current","tick","id","setInterval","clearInterval","Timer","seconds","setSeconds","isActive","setIsActive","minutes","setMinutes","toggle","reset"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAkD,OAAlD,C,CAEA;;AAEA,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,KAA/B,EAAsC;AACrC,QAAMC,aAAa,GAAGJ,MAAM,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,aAAa,CAACC,OAAd,GAAwBH,QAAxB;AACD,GAFQ,CAAT;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACd,aAASO,IAAT,GAAgB;AACjBF,MAAAA,aAAa,CAACC,OAAd;AACE;;AAED,QAAGF,KAAH,EAAS;AACV,UAAII,EAAE,GAAGC,WAAW,CAACF,IAAD,EAAOH,KAAP,CAApB;AACA,aAAO,MAAMM,aAAa,CAACF,EAAD,CAA1B;AACE;AACF,GATQ,EASN,CAACJ,KAAD,CATM,CAAT;AAUE;;AAEH,MAAMO,KAAK,GAAG,MAAM;AAAA,oBACWZ,QAAQ,CAAI,KAAJ,CADnB;AAAA;AAAA,QACZa,OADY;AAAA,QACHC,UADG;;AAAA,qBAEed,QAAQ,CAAC,KAAD,CAFvB;AAAA;AAAA,QAEVe,QAFU;AAAA,QAEAC,WAFA;;AAAA,qBAGWhB,QAAQ,CAAC,GAAD,CAHnB;AAAA;AAAA,QAGZiB,OAHY;AAAA,QAGHC,UAHG;;AAKnBf,EAAAA,WAAW,CAAC,MAAM;AACjB,QAAGU,OAAO,KAAK,EAAf,EAAmB;AAClBK,MAAAA,UAAU,CAACD,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAV;AACAH,MAAAA,UAAU,CAAC,CAAD,CAAV;AACA,KAHD,MAGK;AACJA,MAAAA,UAAU,CAACD,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAV;AACA;AACD,GAPU,EAORE,QAAQ,GAAG,IAAH,GAAU,IAPV,CAAX;;AASE,WAASI,MAAT,GAAkB;AACnBH,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACE;;AAED,WAASK,KAAT,GAAiB;AACfN,IAAAA,UAAU,CAAC,CAAD,CAAV;AACAI,IAAAA,UAAU,CAAC,CAAD,CAAV;AACAF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AAEF,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,OAAN,OACGJ,OADH,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,iDAA0CE,QAAQ,GAAG,QAAH,GAAc,UAAhE,CAAjB;AAA+F,IAAA,OAAO,EAAEI,MAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,GAAG,OAAH,GAAa,OADxB,CADF,EAIE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAEK,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CAJF,CADF;AAeD,CAvCD;;AAwCA,eAAeR,KAAf","sourcesContent":["\r\nimport React, { useState, useEffect, useRef} from 'react';\r\n\r\n//let interval = null;\r\n\r\nfunction useInterval(callback, delay) {\r\n\tconst savedCallback = useRef();\r\n  \r\n\tuseEffect(() => {\r\n\t  savedCallback.current = callback;\r\n\t});\r\n  \r\n\tuseEffect(() => {\r\n\t  function tick() {\r\n\t\tsavedCallback.current();\r\n\t  }\r\n  \r\n\t  if(delay){\r\n\t\tlet id = setInterval(tick, delay);\r\n\t\treturn () => clearInterval(id);\r\n\t  }\r\n\t}, [delay]);\r\n  }\r\n\r\nconst Timer = () => {\r\n\tconst [seconds, setSeconds] = useState(`${\"0.0\"}`);\r\n  \tconst [isActive, setIsActive] = useState(false);\r\n\tconst [minutes, setMinutes] = useState(0.0);\r\n\r\n\tuseInterval(() => {\r\n\t\tif(seconds === 59) {\r\n\t\t\tsetMinutes(minutes => minutes + 1);\r\n\t\t\tsetSeconds(0);\r\n\t\t}else{\r\n\t\t\tsetSeconds(seconds => seconds + 1);\r\n\t\t}\r\n\t}, isActive ? 1000 : null);\r\n\r\n  \tfunction toggle() {\t\r\n\t\tsetIsActive(!isActive);\r\n  \t}\r\n\r\n  \tfunction reset() {\r\n    \tsetSeconds(0);\r\n    \tsetMinutes(0);\r\n    \tsetIsActive(false);\r\n\t  }\r\n\r\n  return (\r\n    <div >\r\n      <div>{minutes}:\r\n        {seconds}\r\n      </div>\r\n      <div>\r\n        <button className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} onClick={toggle}>\r\n          {isActive ? 'Pause' : 'Start'}\r\n        </button>\r\n        <button className=\"button\" onClick={reset}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Timer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}