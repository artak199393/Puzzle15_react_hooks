{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\HP\\\\Desktop\\\\games\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\HP\\\\Desktop\\\\games\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\games\\\\src\\\\components\\\\Main.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\ntext-align:center;\\nbackground-color: rgba(255, 255, 165, 1);;\\npadding: 12px 0 12px 0;\\nmargin: 5px;\\nborder-radius:5px;\\nfont-size:20px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect, forwardRef, useRef, useImperativeHandle } from 'react';\nimport { Row, Col as bCol } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { breakStatement } from '@babel/types';\nconst Col = styled(bCol)(_templateObject());\nlet currentI = 0;\nlet currentJ = 0;\n\nconst randomMatrix = () => {\n  const items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, null];\n  var randomArray = [];\n  let m = [];\n\n  while (items.length) {\n    let index = Math.floor(Math.random() * items.length);\n    let temp = items[index];\n    items.splice(index, 1);\n    randomArray.push(temp);\n  }\n\n  for (let i = 0; i < 4; i++) {\n    if (m[i] === undefined) {\n      m[i] = [];\n    }\n\n    for (let j = 0; j < 4; j++) {\n      m[i][j] = randomArray.shift();\n\n      if (m[i][j] === null) {\n        currentI = i;\n        currentJ = j;\n      }\n    }\n  }\n\n  return m;\n};\n\nconst Main = forwardRef(({\n  addSteps,\n  Toggle\n}, ref) => {\n  const _useState = useState({\n    matrix: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  useEffect(() => {\n    // generate random matrix\n    const matrix = randomMatrix(); //set matrix to state\n\n    setState({\n      matrix\n    }); // setMatrix(matrix => matr);\n\n    console.log(\"HERE HERE  = \", state);\n    document.addEventListener('keydown', e => {\n      switch (e.keyCode) {\n        case 37:\n          // \"left\"\n          moveTo(currentI, currentJ + 1);\n          break;\n\n        case 39:\n          // \"right\"\n          moveTo(currentI, currentJ - 1);\n          break;\n\n        case 38:\n          // \"up\"\n          moveTo(currentI + 1, currentJ);\n          break;\n\n        case 40:\n          // \"down\"\n          moveTo(currentI - 1, currentJ);\n          break;\n\n        default:\n      }\n    });\n\n    const moveTo = (nextI, nextJ) => {\n      if (nextI <= -1 || nextI >= 4 || nextJ <= -1 || nextJ >= 4) {\n        return;\n      } // console.log(currentJ);\n\n\n      const state = Object.assign({}, state);\n      const matrix = state.matrix;\n      console.log(\"MATR = \", matrix);\n      console.log(matrix);\n      matrix[currentI][currentJ] = matrix[nextI][nextJ];\n      matrix[nextI][nextJ] = null;\n      currentI = nextI;\n      currentJ = nextJ;\n      Toggle();\n      addSteps();\n      setState({\n        matrix\n      });\n    };\n  }, []);\n  useEffect(() => {\n    console.log(\"1111111 = \", state);\n  }, [state]);\n  useImperativeHandle(ref, () => ({\n    resetMatrix() {\n      const mtr = [...randomMatrix()];\n      console.log(\"random matrix = \", mtr); //set matrix to state\n      // setMatrix(matrix => {\n      //     console.log(\"setMatrix = \",mtr)\n      //     console.log(\"OLD MATRIX = \",matrix); \n      //     return mtr;\n      // });\n\n      setState({\n        matrix: mtr\n      });\n      console.log(\"AFTER SETTING = \", state);\n    }\n\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, state.matrix.map((value, index) => {\n    return React.createElement(Row, {\n      key: \"row_\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, value.map((item, key) => {\n      return React.createElement(Col, {\n        lg: 1,\n        key: \"col_\".concat(key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, item, \" \\xA0\");\n    }));\n  }));\n});\nexport default Main;","map":{"version":3,"sources":["C:/Users/HP/Desktop/games/src/components/Main.js"],"names":["React","useState","useEffect","forwardRef","useRef","useImperativeHandle","Row","Col","bCol","styled","breakStatement","currentI","currentJ","randomMatrix","items","randomArray","m","length","index","Math","floor","random","temp","splice","push","i","undefined","j","shift","Main","addSteps","Toggle","ref","matrix","state","setState","console","log","document","addEventListener","e","keyCode","moveTo","nextI","nextJ","Object","assign","resetMatrix","mtr","map","value","item","key"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,MAAjD,EAAyDC,mBAAzD,QAAoF,OAApF;AACA,SAASC,GAAT,EAAcC,GAAG,IAAIC,IAArB,QAAiC,iBAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,QAA+B,cAA/B;AAEA,MAAMH,GAAG,GAAGE,MAAM,CAACD,IAAD,CAAT,mBAAT;AAUA,IAAIG,QAAQ,GAAG,CAAf;AACA,IAAIC,QAAQ,GAAG,CAAf;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAMC,KAAK,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,EAAnB,EAAsB,EAAtB,EAAyB,EAAzB,EAA4B,EAA5B,EAA+B,EAA/B,EAAkC,EAAlC,EAAqC,IAArC,CAAd;AACA,MAAIC,WAAW,GAAG,EAAlB;AAEA,MAAIC,CAAC,GAAG,EAAR;;AACA,SAAMF,KAAK,CAACG,MAAZ,EAAoB;AAChB,QAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcP,KAAK,CAACG,MAA/B,CAAZ;AACA,QAAIK,IAAI,GAAGR,KAAK,CAACI,KAAD,CAAhB;AACAJ,IAAAA,KAAK,CAACS,MAAN,CAAaL,KAAb,EAAmB,CAAnB;AACAH,IAAAA,WAAW,CAACS,IAAZ,CAAiBF,IAAjB;AACH;;AAED,OAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE,CAAlB,EAAqBA,CAAC,EAAtB,EAA0B;AACtB,QAAGT,CAAC,CAACS,CAAD,CAAD,KAASC,SAAZ,EAAsB;AAClBV,MAAAA,CAAC,CAACS,CAAD,CAAD,GAAO,EAAP;AACH;;AACD,SAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAoB;AAChBX,MAAAA,CAAC,CAACS,CAAD,CAAD,CAAKE,CAAL,IAAUZ,WAAW,CAACa,KAAZ,EAAV;;AACA,UAAGZ,CAAC,CAACS,CAAD,CAAD,CAAKE,CAAL,MAAY,IAAf,EAAsB;AAClBhB,QAAAA,QAAQ,GAAGc,CAAX;AACAb,QAAAA,QAAQ,GAAGe,CAAX;AACH;AAEJ;AAEJ;;AACD,SAAOX,CAAP;AACH,CA3BD;;AA6BA,MAAMa,IAAI,GAAG1B,UAAU,CAAC,CAAC;AAAC2B,EAAAA,QAAD;AAAUC,EAAAA;AAAV,CAAD,EAAmBC,GAAnB,KAA2B;AAAA,oBACtB/B,QAAQ,CAAC;AAACgC,IAAAA,MAAM,EAAE;AAAT,GAAD,CADc;AAAA;AAAA,QACxCC,KADwC;AAAA,QAClCC,QADkC;;AAE/CjC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAM+B,MAAM,GAAGpB,YAAY,EAA3B,CAFY,CAGZ;;AACAsB,IAAAA,QAAQ,CAAC;AAACF,MAAAA;AAAD,KAAD,CAAR,CAJY,CAKZ;;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,KAA7B;AAEAI,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCC,CAAD,IAAK;AACrC,cAAOA,CAAC,CAACC,OAAT;AACI,aAAK,EAAL;AACI;AACAC,UAAAA,MAAM,CAAC/B,QAAD,EAAUC,QAAQ,GAAC,CAAnB,CAAN;AACA;;AAEJ,aAAK,EAAL;AACI;AACA8B,UAAAA,MAAM,CAAC/B,QAAD,EAAUC,QAAQ,GAAC,CAAnB,CAAN;AACA;;AACJ,aAAK,EAAL;AACI;AACA8B,UAAAA,MAAM,CAAC/B,QAAQ,GAAC,CAAV,EAAYC,QAAZ,CAAN;AACA;;AACJ,aAAK,EAAL;AACI;AACA8B,UAAAA,MAAM,CAAC/B,QAAQ,GAAC,CAAV,EAAYC,QAAZ,CAAN;AACA;;AACJ;AAlBJ;AAoBH,KArBD;;AAsBA,UAAM8B,MAAM,GAAG,CAACC,KAAD,EAAOC,KAAP,KAAiB;AAC5B,UAAID,KAAK,IAAI,CAAC,CAAV,IAAeA,KAAK,IAAI,CAAzB,IAAgCC,KAAK,IAAI,CAAC,CAAV,IAAeA,KAAK,IAAI,CAA3D,EAA+D;AAC3D;AACH,OAH2B,CAI5B;;;AACA,YAAMV,KAAK,GAAGW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBZ,KAAjB,CAAd;AAL4B,YAMpBD,MANoB,GAMTC,KANS,CAMpBD,MANoB;AAO5BG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBJ,MAAtB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAA,MAAAA,MAAM,CAACtB,QAAD,CAAN,CAAiBC,QAAjB,IAA6BqB,MAAM,CAACU,KAAD,CAAN,CAAcC,KAAd,CAA7B;AACAX,MAAAA,MAAM,CAACU,KAAD,CAAN,CAAcC,KAAd,IAAuB,IAAvB;AACAjC,MAAAA,QAAQ,GAAGgC,KAAX;AACA/B,MAAAA,QAAQ,GAAGgC,KAAX;AACAb,MAAAA,MAAM;AACND,MAAAA,QAAQ;AACRK,MAAAA,QAAQ,CAAC;AAAEF,QAAAA;AAAF,OAAD,CAAR;AACH,KAhBD;AAiBD,GA/CM,EA+CJ,EA/CI,CAAT;AAiDE/B,EAAAA,SAAS,CAAC,MAAM;AACZkC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,KAA1B;AACH,GAFQ,EAEP,CAACA,KAAD,CAFO,CAAT;AAIA7B,EAAAA,mBAAmB,CAAC2B,GAAD,EAAM,OAAO;AAC9Be,IAAAA,WAAW,GAAE;AACT,YAAMC,GAAG,GAAG,CAAC,GAAGnC,YAAY,EAAhB,CAAZ;AACAuB,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BW,GAA/B,EAFS,CAIT;AACA;AACA;AACA;AACA;AACA;;AACAb,MAAAA,QAAQ,CAAC;AAACF,QAAAA,MAAM,EAACe;AAAR,OAAD,CAAR;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,KAAhC;AACH;;AAb6B,GAAP,CAAN,CAAnB;AAiBF,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFA,KAAK,CAACD,MAAN,CAAagB,GAAb,CAAiB,CAACC,KAAD,EAAQhC,KAAR,KAAgB;AAC9B,WAAO,oBAAC,GAAD;AAAK,MAAA,GAAG,gBAASA,KAAT,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACFgC,KAAK,CAACD,GAAN,CAAU,CAACE,IAAD,EAAOC,GAAP,KAAa;AACpB,aAAO,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,GAAG,gBAASA,GAAT,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCD,IAAhC,UAAP;AACH,KAFA,CADE,CAAP;AAKH,GANA,CADE,CAAP;AASH,CAjFsB,CAAvB;AAmFA,eAAetB,IAAf","sourcesContent":["import React, { useState, useEffect, forwardRef, useRef, useImperativeHandle } from 'react';\r\nimport { Row, Col as bCol } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport { breakStatement } from '@babel/types';\r\n\r\nconst Col = styled(bCol)`\r\ntext-align:center;\r\nbackground-color: rgba(255, 255, 165, 1);;\r\npadding: 12px 0 12px 0;\r\nmargin: 5px;\r\nborder-radius:5px;\r\nfont-size:20px;\r\n`;\r\n\r\n\r\nlet currentI = 0;\r\nlet currentJ = 0;\r\n\r\nconst randomMatrix = () => {\r\n    const items = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,null];\r\n    var randomArray = [];\r\n    \r\n    let m = [];\r\n    while(items.length) {\r\n        let index = Math.floor(Math.random()*items.length);\r\n        let temp = items[index];\r\n        items.splice(index,1);\r\n        randomArray.push(temp);\r\n    }\r\n    \r\n    for(let i = 0; i< 4; i++) {\r\n        if(m[i] === undefined){\r\n            m[i] = [];\r\n        }\r\n        for(let j=0;j<4;j++){\r\n            m[i][j] = randomArray.shift();\r\n            if(m[i][j] === null ) {\r\n                currentI = i;\r\n                currentJ = j;\r\n            }\r\n            \r\n        }\r\n        \r\n    }\r\n    return m;\r\n}\r\n\r\nconst Main = forwardRef(({addSteps,Toggle},ref) => {\r\n    const [state,setState] = useState({matrix: [] });\r\n    useEffect(() => {\r\n        // generate random matrix\r\n        const matrix = randomMatrix();\r\n        //set matrix to state\r\n        setState({matrix})\r\n        // setMatrix(matrix => matr);\r\n        console.log(\"HERE HERE  = \", state);\r\n        \r\n        document.addEventListener('keydown',(e)=>{\r\n            switch(e.keyCode){\r\n                case 37:\r\n                    // \"left\"\r\n                    moveTo(currentI,currentJ+1);\r\n                    break;\r\n                    \r\n                case 39:\r\n                    // \"right\"\r\n                    moveTo(currentI,currentJ-1);\r\n                    break;\r\n                case 38:\r\n                    // \"up\"\r\n                    moveTo(currentI+1,currentJ);\r\n                    break;\r\n                case 40:\r\n                    // \"down\"\r\n                    moveTo(currentI-1,currentJ);\r\n                    break;\r\n                default:\r\n            }\r\n        });\r\n        const moveTo = (nextI,nextJ) => {\r\n            if((nextI <= -1 || nextI >= 4) || (nextJ <= -1 || nextJ >= 4)) {\r\n                return;\r\n            }\r\n            // console.log(currentJ);\r\n            const state = Object.assign({},state);\r\n            const { matrix } = state;\r\n            console.log(\"MATR = \",matrix)\r\n            console.log(matrix)\r\n            matrix[currentI][currentJ] = matrix[nextI][nextJ];\r\n            matrix[nextI][nextJ] = null;\r\n            currentI = nextI;\r\n            currentJ = nextJ;\r\n            Toggle();\r\n            addSteps();\r\n            setState({ matrix });\r\n        };  \r\n      }, []);\r\n\r\n      useEffect(() => {\r\n          console.log(\"1111111 = \", state);\r\n      },[state]);\r\n\r\n      useImperativeHandle(ref, () => ({\r\n        resetMatrix(){\r\n            const mtr = [...randomMatrix()];\r\n            console.log(\"random matrix = \",mtr);\r\n            \r\n            //set matrix to state\r\n            // setMatrix(matrix => {\r\n            //     console.log(\"setMatrix = \",mtr)\r\n            //     console.log(\"OLD MATRIX = \",matrix); \r\n            //     return mtr;\r\n            // });\r\n            setState({matrix:mtr});\r\n            console.log(\"AFTER SETTING = \", state);\r\n        }\r\n    }));\r\n    \r\n\r\n    return <div>\r\n        {state.matrix.map((value, index)=>{\r\n            return <Row key={`row_${index}`}>\r\n                {value.map((item, key)=>{\r\n                    return <Col lg={1} key={`col_${key}`}>{item} &nbsp;</Col> \r\n                })}\r\n            </Row> \r\n        })}\r\n    </div>\r\n});\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}