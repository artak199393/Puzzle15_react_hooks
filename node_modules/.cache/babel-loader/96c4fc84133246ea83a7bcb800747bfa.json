{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\HP\\\\Desktop\\\\games\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\games\\\\src\\\\components\\\\Control.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\n\nclass Counter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      isRunning: true\n    };\n\n    this.startInterval = () => {\n      clearInterval(this.interval);\n      this.interval = setInterval(this.tick, this.state.delay);\n      console.log(this.interval);\n    };\n\n    this.toggleCounter = () => {\n      console.log(this.state.isRunning);\n\n      if (this.state.isRunning) {\n        clearInterval(this.interval);\n      } else {\n        this.startInterval(this.state.delay);\n      }\n\n      this.setState({\n        count: 0,\n        isRunning: !this.state.isRunning\n      });\n    };\n\n    this.state = _objectSpread({}, this.state, {}, props);\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(this.tick, this.state.delay);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.delay !== this.state.delay) {\n      this.startInterval();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const _this$state = this.state,\n          isRunning = _this$state.isRunning,\n          count = _this$state.count,\n          toggleCounter = this.toggleCounter;\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, count), React.createElement(\"button\", {\n      onClick: toggleCounter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, isRunning ? \"stop\" : \"start\"));\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["C:/Users/HP/Desktop/games/src/components/Control.js"],"names":["React","Counter","Component","constructor","props","state","count","isRunning","startInterval","clearInterval","interval","setInterval","tick","delay","console","log","toggleCounter","setState","componentDidMount","componentDidUpdate","prevProps","prevState","componentWillUnmount","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AAMrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SALnBC,KAKmB,GALX;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,SAAS,EAAE;AAFL,KAKW;;AAAA,SAmBnBC,aAnBmB,GAmBH,MAAM;AACpBC,MAAAA,aAAa,CAAC,KAAKC,QAAN,CAAb;AACA,WAAKA,QAAL,GAAgBC,WAAW,CAAC,KAAKC,IAAN,EAAY,KAAKP,KAAL,CAAWQ,KAAvB,CAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,QAAjB;AACD,KAvBkB;;AAAA,SAwBnBM,aAxBmB,GAwBH,MAAM;AACpBF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWE,SAAvB;;AACA,UAAI,KAAKF,KAAL,CAAWE,SAAf,EAA0B;AAC3BE,QAAAA,aAAa,CAAC,KAAKC,QAAN,CAAb;AACE,OAFD,MAEO;AACR,aAAKF,aAAL,CAAmB,KAAKH,KAAL,CAAWQ,KAA9B;AACE;;AACD,WAAKI,QAAL,CAAc;AACfX,QAAAA,KAAK,EAAE,CADQ;AAEfC,QAAAA,SAAS,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAFR,OAAd;AAID,KAnCkB;;AAEjB,SAAKF,KAAL,qBAAkB,KAAKA,KAAvB,MAAiCD,KAAjC;AACD;;AAEDc,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,QAAL,GAAgBC,WAAW,CAAC,KAAKC,IAAN,EAAY,KAAKP,KAAL,CAAWQ,KAAvB,CAA3B;AACD;;AAEDM,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,QAAIA,SAAS,CAACR,KAAV,KAAoB,KAAKR,KAAL,CAAWQ,KAAnC,EAA0C;AAC3C,WAAKL,aAAL;AACE;AACF;;AAEDc,EAAAA,oBAAoB,GAAG;AACrBb,IAAAA,aAAa,CAAC,KAAKC,QAAN,CAAb;AACD;;AAoBDa,EAAAA,MAAM,GAAG;AAAA,wBAIH,IAJG,CAERlB,KAFQ;AAAA,UAECE,SAFD,eAECA,SAFD;AAAA,UAEWD,KAFX,eAEWA,KAFX;AAAA,UAGRU,aAHQ,GAIH,IAJG,CAGRA,aAHQ;AAMP,WACD,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKV,KAAL,CADF,EAEE;AAAQ,MAAA,OAAO,EAAEU,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCT,SAAS,GAAG,MAAH,GAAY,OAAtD,CAFF,CADC;AAMD;;AAvDoC;;AAyDpC,eAAeN,OAAf","sourcesContent":["import React from 'react';\r\n\r\n\r\nclass Counter extends React.Component {\r\n\tstate = {\r\n\t  count: 0,\r\n\t  isRunning: true\r\n\t};\r\n  \r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t  this.state = { ...this.state, ...props };\r\n\t}\r\n  \r\n\tcomponentDidMount() {\r\n\t  this.interval = setInterval(this.tick, this.state.delay);\r\n\t}\r\n  \r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t  if (prevState.delay !== this.state.delay) {\r\n\t\tthis.startInterval();\r\n\t  }\r\n\t}\r\n  \r\n\tcomponentWillUnmount() {\r\n\t  clearInterval(this.interval);\r\n\t}\r\n  \r\n\tstartInterval = () => {\r\n\t  clearInterval(this.interval);\r\n\t  this.interval = setInterval(this.tick, this.state.delay);\r\n\t  console.log(this.interval);\r\n\t};\r\n\ttoggleCounter = () => {\r\n\t  console.log(this.state.isRunning);\r\n\t  if (this.state.isRunning) {\r\n\t\tclearInterval(this.interval);\r\n\t  } else {\r\n\t\tthis.startInterval(this.state.delay);\r\n\t  }\r\n\t  this.setState({\r\n\t\tcount: 0,\r\n\t\tisRunning: !this.state.isRunning\r\n\t  });\r\n\t};\r\n  \r\n\trender() {\r\n\t  const {\r\n\t\tstate: { isRunning,count },\r\n\t\ttoggleCounter,\r\n\t  } = this;\r\n  \r\n\t  return (\r\n\t\t<>\r\n\t\t  <h1>{count}</h1>\r\n\t\t  <button onClick={toggleCounter}>{isRunning ? \"stop\" : \"start\"}</button>\r\n\t\t</>\r\n\t  );\r\n\t}\r\n  }\r\n  export default Counter"]},"metadata":{},"sourceType":"module"}