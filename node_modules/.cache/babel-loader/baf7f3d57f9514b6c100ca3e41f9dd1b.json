{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\games\\\\src\\\\components\\\\Control.js\";\n// export default class App extends Component {\n// \tconstructor(props) {\n// \t  super(props);\n// \t  this.state = {\n// \t\t isActive: true\n// \t  };\n// \t}\n//    componentDidMount() {\n// \t  this.intervalId = setInterval(() => {\n// \t\tthis.randomCallObject();\n// \t  }, 5000);\n// \t}\n// \trandomCallObject() {\n// \t\tthis.setState({\n// \t\tActive: !this.state.isActive\n// \t  });\n// \t}\n// \trender() {\n// \t   let clock= {\n// \t\t\ttime: 150,\n// \t\t\tisActive:this.state.isActive\n// \t\t  }\n// \t  let clock2= {\n// \t\t\ttime: 100,\n// \t\t\tisActive:!this.state.isActive\n// \t\t  }\n// \t  return (\n// \t   <div className=\"container\">\n// \t\t  <Clcok ClockData={clock}/>\n// \t\t  <Clcok ClockData={clock2}/>\n// \t\t</div>\n// \t  );\n// \t}\n//   }\nimport React, { Component } from \"react\";\nconst TOTAL_MINUTES = 60;\nexport default class ClockComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: props.ClockData.time,\n      isActive: props.ClockData.isActive\n    };\n  }\n\n  componentDidMount() {\n    const isActive = this.state.isActive;\n\n    if (isActive === true) {\n      this.intervalId = setInterval(() => {\n        const time = this.state.time;\n\n        if (time > 0) {\n          this.setState({\n            time: time + 1\n          });\n        }\n      }, 1000);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    const time = this.state.time;\n    let minutes = \"\" + Math.floor(time % (TOTAL_MINUTES * TOTAL_MINUTES) / TOTAL_MINUTES);\n    let seconds = \"\" + Math.floor(time % TOTAL_MINUTES);\n\n    if (isNaN(minutes) || isNaN(seconds)) {\n      return null;\n    }\n\n    if (minutes.length === 1) {\n      minutes = \"0\".concat(minutes);\n    }\n\n    if (seconds.length === 1) {\n      seconds = \"0\".concat(seconds);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, minutes, \":\", seconds)));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/HP/Desktop/games/src/components/Control.js"],"names":["React","Component","TOTAL_MINUTES","ClockComponent","constructor","props","state","time","ClockData","isActive","componentDidMount","intervalId","setInterval","setState","componentWillUnmount","clearInterval","render","minutes","Math","floor","seconds","isNaN","length"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,MAAMC,aAAa,GAAG,EAAtB;AACA,eAAe,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AACvDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACdC,MAAAA,IAAI,EAAEF,KAAK,CAACG,SAAN,CAAgBD,IADR;AAEdE,MAAAA,QAAQ,EAAEJ,KAAK,CAACG,SAAN,CAAgBC;AAFZ,KAAb;AAID;;AACDC,EAAAA,iBAAiB,GAAG;AAAA,UACVD,QADU,GACG,KAAKH,KADR,CACVG,QADU;;AAElB,QAAIA,QAAQ,KAAK,IAAjB,EAAuB;AACxB,WAAKE,UAAL,GAAkBC,WAAW,CAAC,MAAM;AAAA,cAC1BL,IAD0B,GACjB,KAAKD,KADY,CAC1BC,IAD0B;;AAElC,YAAIA,IAAI,GAAG,CAAX,EAAc;AACf,eAAKM,QAAL,CAAc;AACZN,YAAAA,IAAI,EAAEA,IAAI,GAAG;AADD,WAAd;AAGE;AACF,OAP4B,EAO1B,IAP0B,CAA7B;AAQE;AACF;;AACDO,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKJ,UAAN,CAAb;AACD;;AACAK,EAAAA,MAAM,GAAG;AAAA,UACAT,IADA,GACS,KAAKD,KADd,CACAC,IADA;AAER,QAAIU,OAAO,GAAE,KAAKC,IAAI,CAACC,KAAL,CAAYZ,IAAI,IAAIL,aAAa,GAAGA,aAApB,CAAL,GAA0CA,aAArD,CAAlB;AACA,QAAIkB,OAAO,GAAG,KAAKF,IAAI,CAACC,KAAL,CAAWZ,IAAI,GAAGL,aAAlB,CAAnB;;AACA,QAAImB,KAAK,CAACJ,OAAD,CAAL,IAAkBI,KAAK,CAACD,OAAD,CAA3B,EAAsC;AACvC,aAAO,IAAP;AACE;;AACD,QAAIH,OAAO,CAACK,MAAR,KAAmB,CAAvB,EAA0B;AAC3BL,MAAAA,OAAO,cAAOA,OAAP,CAAP;AACE;;AACD,QAAIG,OAAO,CAACE,MAAR,KAAmB,CAAvB,EAA0B;AAC3BF,MAAAA,OAAO,cAAOA,OAAP,CAAP;AACE;;AACD,WACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEH,OADF,OACYG,OADZ,CADA,CADA,CADD;AASD;;AA9CsD","sourcesContent":["// export default class App extends Component {\r\n// \tconstructor(props) {\r\n// \t  super(props);\r\n// \t  this.state = {\r\n// \t\t isActive: true\r\n// \t  };\r\n// \t}\r\n//    componentDidMount() {\r\n// \t  this.intervalId = setInterval(() => {\r\n// \t\tthis.randomCallObject();\r\n// \t  }, 5000);\r\n// \t}\r\n// \trandomCallObject() {\r\n// \t\tthis.setState({\r\n// \t\tActive: !this.state.isActive\r\n// \t  });\r\n// \t}\r\n// \trender() {\r\n// \t   let clock= {\r\n// \t\t\ttime: 150,\r\n// \t\t\tisActive:this.state.isActive\r\n// \t\t  }\r\n// \t  let clock2= {\r\n// \t\t\ttime: 100,\r\n// \t\t\tisActive:!this.state.isActive\r\n// \t\t  }\r\n// \t  return (\r\n// \t   <div className=\"container\">\r\n// \t\t  <Clcok ClockData={clock}/>\r\n// \t\t  <Clcok ClockData={clock2}/>\r\n// \t\t</div>\r\n// \t  );\r\n// \t}\r\n//   }\r\n  import React, { Component } from \"react\";\r\n  const TOTAL_MINUTES = 60;\r\n  export default class ClockComponent extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t  this.state = {\r\n\t\ttime: props.ClockData.time,\r\n\t\tisActive: props.ClockData.isActive\r\n\t  };\r\n\t}\r\n\tcomponentDidMount() {\r\n\t  const { isActive } = this.state;\r\n\t  if (isActive === true) {\r\n\t\tthis.intervalId = setInterval(() => {\r\n\t\t  const { time } = this.state;\r\n\t\t  if (time > 0) {\r\n\t\t\tthis.setState({\r\n\t\t\t  time: time + 1\r\n\t\t\t});\r\n\t\t  }\r\n\t\t}, 1000);\r\n\t  }\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t  clearInterval(this.intervalId);\r\n\t}\r\n\t render() {\r\n\t  const { time } = this.state;\r\n\t  let minutes =\"\" + Math.floor((time % (TOTAL_MINUTES * TOTAL_MINUTES))/ TOTAL_MINUTES);\r\n\t  let seconds = \"\" + Math.floor(time % TOTAL_MINUTES);\r\n\t  if (isNaN(minutes) || isNaN(seconds)) {\r\n\t\treturn null;\r\n\t  }\r\n\t  if (minutes.length === 1) {\r\n\t\tminutes = `0${minutes}`;\r\n\t  }\r\n\t  if (seconds.length === 1) {\r\n\t\tseconds = `0${seconds}`;\r\n\t  }\r\n\t  return (\r\n\t   <div className=\"row\">\r\n\t\t  <div className=\"col-md-1\">\r\n\t\t  <div> \r\n\t\t\t  {minutes}:{seconds}\r\n\t\t </div>\r\n\t\t  </div>\r\n\t\t </div>\r\n\t   );\r\n\t}\r\n  }"]},"metadata":{},"sourceType":"module"}