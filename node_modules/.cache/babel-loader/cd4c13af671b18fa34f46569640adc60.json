{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\HP\\\\Desktop\\\\games\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\games\\\\src\\\\components\\\\Time.js\";\nimport React, { useState, useEffect, useRef } from 'react'; //let interval = null;\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    let id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nconst Timer = () => {\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        seconds = _useState2[0],\n        setSeconds = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isActive = _useState4[0],\n        setIsActive = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        minutes = _useState6[0],\n        setMinutes = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        interval = _useState8[0],\n        setSecundInterval = _useState8[1];\n\n  const _useState9 = useState(1000),\n        _useState10 = _slicedToArray(_useState9, 2),\n        delay = _useState10[0],\n        setDelay = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        isRunning = _useState12[0],\n        setIsRunning = _useState12[1];\n\n  useInterval(() => {\n    if (seconds === 59) {\n      setMinutes(minutes => minutes + 1);\n      setSeconds(0);\n    } else {\n      setSeconds(seconds => seconds + 1);\n    }\n  }, isRunning ? delay : null);\n\n  function toggle() {\n    setIsRunning(!isRunning);\n  }\n\n  function reset() {\n    setSeconds(0);\n    setMinutes(0);\n    setIsActive(false);\n  } //   const startStopTimer = (pActive) => {\n  // \tif (pActive) {  \n  // \t\tconst startInterval = setInterval(() => {\n  // \t\t\tconsole.log(seconds);\n  // \t\t\tif(seconds === 5) {\n  // \t\t\t\tsetMinutes(minutes => minutes + 1);\n  // \t\t\t\tsetSeconds(0);\n  // \t\t\t}else{\n  // \t\t\t\tsetSeconds(seconds => seconds + 1);\n  // \t\t\t}\n  // \t\t\t}, 1000);\n  // \t\t\tsetSecundInterval(startInterval);\n  // \t} else {\n  // \t\tclearInterval(interval);\n  // \t}\n  //   }\n  // useEffect(() => {\n  // \tif (isActive) {  \n  // \t\tconst startInterval = setInterval(() => {\n  // \t\t\tconsole.log(seconds);\n  // \t\t\tif(seconds == 5) {\n  // \t\t\t\tsetMinutes(minutes => minutes + 1);\n  // \t\t\t\tsetSeconds(0);\n  // \t\t\t}else{\n  // \t\t\t\tsetSeconds(seconds => seconds + 1);\n  // \t\t\t}\n  // \t\t  }, 1000);\n  // \t\t  setSecundInterval(startInterval);\n  // \t} else {\n  // \t\tconsole.log(interval);\n  // \t\tclearInterval(interval);\n  // \t}\n  // \t},\n  //   \t[isActive]\n  // );\n  // useEffect(() => {\n  // \tlet interval = null;\n  // \tconsole.log(\"second\");\n  // \tif (isActive) {\n  //   \t\tinterval = setInterval(() => {\n  //     \t\tsetMinutes(minutes => minutes + 1);\n  //   \t\t}, 60000);\n  // \t} else if (!isActive && minutes !== 0) {\n  //   \t\tclearInterval(interval);\n  // \t}\n  // \treturn () => clearInterval(interval);\n  // \t  },\n  // \t[isActive, minutes]\n  // );\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, minutes, \":\", seconds), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button button-primary button-primary-\".concat(isActive ? 'active' : 'inactive'),\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, isActive ? 'Pause' : 'Start'), React.createElement(\"button\", {\n    className: \"button\",\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Reset\")));\n};\n\nexport default Timer;","map":{"version":3,"sources":["C:/Users/HP/Desktop/games/src/components/Time.js"],"names":["React","useState","useEffect","useRef","useInterval","callback","delay","savedCallback","current","tick","id","setInterval","clearInterval","Timer","seconds","setSeconds","isActive","setIsActive","minutes","setMinutes","interval","setSecundInterval","setDelay","isRunning","setIsRunning","toggle","reset"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect, useRef} from 'react';\r\n\r\n//let interval = null;\r\n\r\nfunction useInterval(callback, delay) {\r\n\tconst savedCallback = useRef();\r\n  \r\n\tuseEffect(() => {\r\n\t  savedCallback.current = callback;\r\n\t});\r\n  \r\n\tuseEffect(() => {\r\n\t  function tick() {\r\n\t\tsavedCallback.current();\r\n\t  }\r\n  \r\n\t  let id = setInterval(tick, delay);\r\n\t  return () => clearInterval(id);\r\n\t}, [delay]);\r\n  }\r\n\r\nconst Timer = () => {\r\n\tconst [seconds, setSeconds] = useState(0);\r\n  \tconst [isActive, setIsActive] = useState(false);\r\n\tconst [minutes, setMinutes] = useState(0);\r\n\tconst [interval, setSecundInterval] = useState(null);  \r\n\r\n\tconst [delay, setDelay] = useState(1000);\r\n\tconst [isRunning, setIsRunning] = useState(false);\r\n\r\n\tuseInterval(() => {\r\n\t\tif(seconds === 59) {\r\n\t\t\tsetMinutes(minutes => minutes + 1);\r\n\t\t\tsetSeconds(0);\r\n\t\t}else{\r\n\t\t\tsetSeconds(seconds => seconds + 1);\r\n\t\t}\r\n\t}, isRunning ? delay : null);\r\n\r\n\r\n  \tfunction toggle() {\t\r\n\t\tsetIsRunning(!isRunning);\r\n  \t}\r\n\r\n  \tfunction reset() {\r\n    \tsetSeconds(0);\r\n    \tsetMinutes(0);\r\n    \tsetIsActive(false);\r\n\t  }\r\n\r\n\t//   const startStopTimer = (pActive) => {\r\n\t// \tif (pActive) {  \r\n\t// \t\tconst startInterval = setInterval(() => {\r\n\t// \t\t\tconsole.log(seconds);\r\n\t// \t\t\tif(seconds === 5) {\r\n\t// \t\t\t\tsetMinutes(minutes => minutes + 1);\r\n\t// \t\t\t\tsetSeconds(0);\r\n\t// \t\t\t}else{\r\n\t// \t\t\t\tsetSeconds(seconds => seconds + 1);\r\n\t// \t\t\t}\r\n\t// \t\t\t}, 1000);\r\n\t// \t\t\tsetSecundInterval(startInterval);\r\n\t// \t} else {\r\n\t// \t\tclearInterval(interval);\r\n\t// \t}\r\n\r\n\t//   }\r\n\r\n  \t// useEffect(() => {\r\n    // \tif (isActive) {  \r\n\t// \t\tconst startInterval = setInterval(() => {\r\n\t// \t\t\tconsole.log(seconds);\r\n\t// \t\t\tif(seconds == 5) {\r\n\t// \t\t\t\tsetMinutes(minutes => minutes + 1);\r\n\t// \t\t\t\tsetSeconds(0);\r\n\t// \t\t\t}else{\r\n\t// \t\t\t\tsetSeconds(seconds => seconds + 1);\r\n\t// \t\t\t}\r\n\t// \t\t  }, 1000);\r\n\t// \t\t  setSecundInterval(startInterval);\r\n    // \t} else {\r\n\t// \t\tconsole.log(interval);\r\n\t// \t\tclearInterval(interval);\r\n    // \t}\r\n  \t// \t},\r\n\t//   \t[isActive]\r\n\t// );\r\n  \t// useEffect(() => {\r\n\t// \tlet interval = null;\r\n\t// \tconsole.log(\"second\");\r\n    // \tif (isActive) {\r\n    //   \t\tinterval = setInterval(() => {\r\n    //     \t\tsetMinutes(minutes => minutes + 1);\r\n    //   \t\t}, 60000);\r\n    // \t} else if (!isActive && minutes !== 0) {\r\n    //   \t\tclearInterval(interval);\r\n    // \t}\r\n    // \treturn () => clearInterval(interval);\r\n\t// \t  },\r\n\t// \t[isActive, minutes]\r\n\t// );\r\n\r\n  return (\r\n    <div >\r\n      <div>{minutes}:\r\n        {seconds}\r\n      </div>\r\n      <div>\r\n        <button className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} onClick={toggle}>\r\n          {isActive ? 'Pause' : 'Start'}\r\n        </button>\r\n        <button className=\"button\" onClick={reset}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Timer;"]},"metadata":{},"sourceType":"module"}