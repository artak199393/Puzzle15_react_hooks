{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\HP\\\\Desktop\\\\games\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\games\\\\src\\\\components\\\\Main.js\";\nimport React, { useState } from 'react';\nvar items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, \"null\"];\nvar randomArray = [];\n\nwhile (items.length) {\n  var index = Math.floor(Math.random() * items.length);\n  var t = items[index];\n  items.splice(index, 1);\n  randomArray.push(t);\n}\n\nvar m = [];\n\nfor (let i = 0; i < 4; i++) {\n  if (m[i] === undefined) {\n    m[i] = [];\n  }\n\n  for (let j = 0; j < 4; j++) {\n    m[i][j] = randomArray.shift();\n  }\n}\n\nconst Main = () => {\n  const _useState = useState(m),\n        _useState2 = _slicedToArray(_useState, 2),\n        matrix = _useState2[0],\n        setMatrix = _useState2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, matrix.map((value, index) => {\n    return React.createElement(\"p\", {\n      key: \"row_\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, value.map((item, key) => {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        key: \"col_\".concat(key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, item, \" \\xA0\"), \" \");\n    }));\n  }));\n};\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/HP/Desktop/games/src/components/Main.js"],"names":["React","useState","items","randomArray","length","index","Math","floor","random","t","splice","push","m","i","undefined","j","shift","Main","matrix","setMatrix","map","value","item","key"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,IAAIC,KAAK,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,EAAnB,EAAsB,EAAtB,EAAyB,EAAzB,EAA4B,EAA5B,EAA+B,EAA/B,EAAkC,EAAlC,EAAqC,MAArC,CAAZ;AACA,IAAIC,WAAW,GAAG,EAAlB;;AAEA,OAAMD,KAAK,CAACE,MAAZ,EAAoB;AACnB,MAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcN,KAAK,CAACE,MAA/B,CAAZ;AACA,MAAIK,CAAC,GAAGP,KAAK,CAACG,KAAD,CAAb;AACAH,EAAAA,KAAK,CAACQ,MAAN,CAAaL,KAAb,EAAmB,CAAnB;AACAF,EAAAA,WAAW,CAACQ,IAAZ,CAAiBF,CAAjB;AACA;;AAED,IAAIG,CAAC,GAAG,EAAR;;AACA,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE,CAAlB,EAAqBA,CAAC,EAAtB,EAA0B;AACtB,MAAGD,CAAC,CAACC,CAAD,CAAD,KAASC,SAAZ,EAAsB;AAClBF,IAAAA,CAAC,CAACC,CAAD,CAAD,GAAO,EAAP;AACH;;AACJ,OAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAoB;AACnBH,IAAAA,CAAC,CAACC,CAAD,CAAD,CAAKE,CAAL,IAAUZ,WAAW,CAACa,KAAZ,EAAV;AACA;AACD;;AAED,MAAMC,IAAI,GAAG,MAAM;AAAA,oBACYhB,QAAQ,CAACW,CAAD,CADpB;AAAA;AAAA,QACRM,MADQ;AAAA,QACDC,SADC;;AAEf,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFD,MAAM,CAACE,GAAP,CAAW,CAACC,KAAD,EAAQhB,KAAR,KAAgB;AACxB,WAAO;AAAG,MAAA,GAAG,gBAASA,KAAT,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACFgB,KAAK,CAACD,GAAN,CAAU,CAACE,IAAD,EAAOC,GAAP,KAAa;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM;AAAK,QAAA,GAAG,gBAASA,GAAT,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBD,IAAzB,UAAN,MAAP;AACH,KAFA,CADE,CAAP;AAKH,GANA,CADE,CAAP;AASH,CAXD;;AAaA,eAAeL,IAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nvar items = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,\"null\"];\r\nvar randomArray = [];\r\n\r\nwhile(items.length) {\r\n\tvar index = Math.floor(Math.random()*items.length);\r\n\tvar t = items[index];\r\n\titems.splice(index,1);\r\n\trandomArray.push(t);\r\n}\r\n\r\nvar m = [];\r\nfor(let i = 0; i< 4; i++) {\r\n    if(m[i] === undefined){\r\n        m[i] = [];\r\n    }\r\n\tfor(let j=0;j<4;j++){\r\n\t\tm[i][j] = randomArray.shift();\r\n\t}\r\n}\r\n\r\nconst Main = () => {\r\n    const [matrix,setMatrix] = useState(m);\r\n    return <div>\r\n        {matrix.map((value, index)=>{\r\n            return <p key={`row_${index}`}>\r\n                {value.map((item, key)=>{\r\n                    return <span><div key={`col_${key}`}>{item} &nbsp;</div> </span>\r\n                })}\r\n            </p> \r\n        })}\r\n    </div>\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}